version: '3.8'

x-frontend-common: &frontend-common
  container_name: ceneca-frontend
  ports:
    - "3000:3000"
  environment:
    - NEXT_PUBLIC_API_URL=http://waitlist-backend:3001/api

services:
  frontend:
    <<: *frontend-common
    build:
      context: .
      dockerfile: docker/frontend.${NODE_ENV:-development}.Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
      - ~/.data-connector:/root/.data-connector
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - NEXT_PUBLIC_API_URL=http://waitlist-backend:3001/api
    command: sh -c 'if [ "$$NODE_ENV" = "production" ]; then npm start; else npm run dev; fi'
    
  postgres:
    image: postgres:14-alpine
    container_name: waitlist-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: waitlist_db
    ports:
      - "5460:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: agent-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: waitlist-backend
    ports:
      - "3001:3001"  # Expose backend port directly
    environment:
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=waitlist_db
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
      - JWT_SECRET=admin-secret-key-change-in-production
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      - ENABLE_REDIS=true
      - ENABLE_CLEANUP=true
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ./landing_routes:/app
      - /app/node_modules

volumes:
  pg_data:
  redis_data: